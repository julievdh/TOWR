side = "both", axes = FALSE,method = "stack")
beanplot(x,ll = 1, col = c(0,1,5,3),          side = "both", axes = FALSE,method = "stack")
beanplot(x,ll = 1, col = c(0,1,1,3),          side = "both", axes = FALSE,method = "stack")
beanplot(x,ll = 1, col = c(0,1,1,2),          side = "both", axes = FALSE,method = "stack")
binom(20)
randbin(10)
value<-fate
fate
beanplot(x,ll = 1, col = c(0,1,1,2),          side = "both", axes = FALSE,method = "stack")
x <- rnorm(15)
beanplot(x,ll = 1, col = c(0,1,1,2),
side = "both", axes = FALSE,method = "stack")
require(vioplot)
require(devtools)
require(digest)
require(beanplot)
x <- rnorm(15)
beanplot(x,ll = 1, col = c(0,1,1,2),
side = "both", axes = FALSE,method = "stack")
colpref <- c(5, 5, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 5, 3, 3)
fate
beanplot(x[colpref==3],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[colpref==5],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
+          side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x[colpref==3],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),          side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[colpref==5],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
x <- rnorm(15)
beanplot(x,ll = 1, col = c(0,1,1,2),
side = "both", axes = FALSE,method = "stack")
colpref <- c(5, 5, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 5, 3, 3)
beanplot(x[colpref==3],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[colpref==5],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x[colpref==3],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[colpref==5],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,0,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x[colpref==3],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[colpref==5],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(1,0,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
x <- rnorm(15)
beanplot(x,ll = 1, col = c(0,1,1,2),
side = "both", axes = FALSE,method = "stack")
colpref <- c(5, 5, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 5, 3, 3)
beanplot(x[colpref==3],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[colpref==5],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
x <- rnorm(15)
beanplot(x,ll = 1, col = c(0,1,1,2),
side = "both", axes = FALSE,method = "stack")
beanplot(x[fate==0],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==1],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
x <- diff_min_detailed
beanplot(x,ll = 1, col = c(0,1,1,2),
side = "both", axes = FALSE,method = "stack")
beanplot(x[fate==0],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==1],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x[fate==0],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==1],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x[fate==0],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==0],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==1],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x[fate==0],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==1],ll = 1, col = c(0,5,5,5), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,0,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,0,1,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,0,0,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x[fate==0],ll = 1, col = c(0,6,6,6), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==1],ll = 1, col = c(0,2,2,2), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
x <- diff_max_detailed
#beanplot(x,ll = 1, col = c(0,1,1,2),
#         side = "both", axes = FALSE,method = "stack")
beanplot(x[fate==0],ll = 1, col = c(0,6,6,6), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==1],ll = 1, col = c(0,2,2,2), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,5,5,5), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x[fate==0],ll = 1, col = c(0,6,6,6), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==1],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c(0,1,0,0), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
?palette
?colors
rgb(red, green, blue, 1, names = NULL, maxColorValue = 1)
rgb(1, 1,1, 1, names = NULL, maxColorValue = 1)
rgb(1, 1,1, 0, names = NULL, maxColorValue = 1)
beanplot(x,ll = 1, col = c("#FFFFFF00","#FFFFFFFF","#FFFFFF00","#FFFFFF00"), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c("#FFFFFF00","#FFFFFFFF","#FFFFFFFF","#FFFFFF00"), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c("#FFFFFF00","#FFFFFFFF","#FFFFFFFF","#FFFFFFFF"), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
rgb(0, 0,0, 0, names = NULL, maxColorValue = 1)
beanplot(x[fate==0],ll = 1, col = c(0,6,6,6), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(x[fate==1],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c("#0000000","#FFFFFFFF","#FFFFFFFF","#FFFFFFFF"), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(x,ll = 1, col = c("#00000000","#FFFFFFFF","#FFFFFFFF","#FFFFFFFF"), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
pdf("WorkDiff_beanplot_detailed2.pdf",width = 5,height = 5)
op <- par
op <- par(mfrow = c(1,2),
oma = c(0,0,0,0) + 0.1,
mar = c(2,4,0,0) + 0.1)
beanplot(diff_min_detailed[fate==0],ll = 1, col = c(0,6,6,6), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(diff_min_detailed[fate==1],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(diff_min_detailed,ll = 1, col = c("#00000000","#FFFFFFFF","#FFFFFFFF","#FFFFFFFF"), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(diff_max_detailed[fate==0],ll = 1, col = c(0,6,6,6), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=FALSE)
beanplot(diff_max_detailed[fate==1],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", axes = FALSE,method = "stack", add=TRUE)
beanplot(diff_max_detailed,ll = 1, col = c("#00000000","#FFFFFFFF","#FFFFFFFF","#FFFFFFFF"), what=c(0,1,0,0),
side = "both", axes = FALSE,method = "stack", add=TRUE)
dev.off()
pdf("WorkDiff_beanplot_detailed2.pdf",width = 5,height = 5)
op <- par
op <- par(mfrow = c(1,2),
oma = c(0,0,0,0) + 0.1,
mar = c(2,4,0,0) + 0.1)
beanplot(diff_min_detailed[fate==0],ll = 1, col = c(0,6,6,6), what=c(1,0,1,1),
side = "both",method = "stack", add=FALSE)
beanplot(diff_min_detailed[fate==1],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both",method = "stack", add=TRUE)
beanplot(diff_min_detailed,ll = 1, col = c("#00000000","#FFFFFFFF","#FFFFFFFF","#FFFFFFFF"), what=c(0,1,0,0),
side = "both", method = "stack", add=TRUE)
beanplot(diff_max_detailed[fate==0],ll = 1, col = c(0,6,6,6), what=c(1,0,1,1),
side = "both", method = "stack", add=FALSE)
beanplot(diff_max_detailed[fate==1],ll = 1, col = c(0,3,3,3), what=c(1,0,1,1),
side = "both", method = "stack", add=TRUE)
beanplot(diff_max_detailed,ll = 1, col = c("#00000000","#FFFFFFFF","#FFFFFFFF","#FFFFFFFF"), what=c(0,1,0,0),
side = "both", method = "stack", add=TRUE)
dev.off()
rgb(202, 0,32, `, names = NULL, maxColorValue = 1)
rgb(202, 0,32, 1, names = NULL, maxColorValue = 1)
)
))
axis(2,at=c(1E8,1E9,1E10,1E11,1E12,1E13),labels = c(expression(paste("10"^"8")),
expression(paste("10"^"9")),
expression(paste("10"^"10")),
expression(paste("10"^"11")),
expression(paste("10"^"12")),
expression(paste("10"^"13"))))
)
)
>
end
)
()
off
end
quit
citation(package = "lme", lib.loc = NULL)
lme
diff_min_detailed <- c(231120000,27113184000.0000,11104128000.0000,1772928000.00000,442368000,
4250016000.00000,7634304000.00000,976320000,30405888000.0000,13969584000.0000,
3978720000.00000,6069600000.00000,1763424000.00000,38754720000.0000,13106880000.0000)
diff_max_detailed<- c(10631520000.0000,29206656000.0000,533246112000.000,22664448000.0000,
2540160000.00000,19309536000.0000,10924416000.0000,59597856000.0000,
31478976000.0000,173087280000.000,14105664000.0000,20187360000.0000,
41961888000.0000,209667744000.000,395537472000.000)
fate <- c(0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1) #  0 = alive, 1 = dead
# load required libraries
require(vioplot)
require(devtools)
require(digest)
require(beanplot)
op <- par
op <- par(mfrow = c(1,2),
oma = c(0,0,0,0) + 0.1,
mar = c(2,4,0,0) + 0.1)
beanplot(diff_min_detailed ~ fate,ll = 0.25, log="y", method = "stack", bw = "nrd0",
side = "both" , ylab="Additional Work (J)",axes = FALSE, ylim = c(1E7,1E13),
col = list("white", c("grey", "black")), beanlinewd = 1.75)
beanplot(diff_min_detailed ~ fate,ll = 0.25, log="y", method = "stack", bw = "nrd0",
side = "both" , ylab="Additional Work (J)",axes = TRUE, ylim = c(1E7,1E13),
col = list("white", c("grey", "black")), beanlinewd = 1.75)
# FHL Data - fit power curves
x <- [0.490000000000000
1
1.52000000000000
2.07000000000000
2.54000000000000
3.01000000000000
3.52000000000000
4.02000000000000]
y <- [190.790000000000
200.610000000000
214.010000000000
234.930000000000
260.050000000000
309.660000000000
380.410000000000
500.540000000000]
# FHL Data - fit power curves
x <- [0.490000000000000,
1,
1.52000000000000,
2.07000000000000,
2.54000000000000,
3.01000000000000,
3.52000000000000,
4.02000000000000]
y <- [190.790000000000,
200.610000000000,
214.010000000000,
234.930000000000,
260.050000000000,
309.660000000000,
380.410000000000,
500.540000000000]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
m <- nls(y ~ I(x^power), data = ds, start = list(power = 1),
+     trace = T)
m <- nls(y ~ I(x^power), data = ds, start = list(power = 1),
+     trace = T)
m <- nls(y ~ I(x^power), data = ds, start = list(power = 1),
+     trace = "TRUE")
m <- nls(y ~ I(x^power), data = ds, start = list(power = 1),
+     trace = "T")
m <- nls(y ~ I(x^power), data = ds, start = list(power = 1),trace=T)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
power <- round(summary(m)$coefficients[1], 3)
power.se <- round(summary(m)$coefficients[2], 3)
plot(y ~ x, main = "Fitted power model", sub = "Blue: fit; green: known")
source('~/.active-rstudio-document', echo=TRUE)
rhs <- function(x, b0, b1) {
+ b0 + x^b1
+}
m.2 <- nls(y ~ rhs(x, intercept, power), data = ds, start = list(intercept = 0, + power = 2), trace = T)
m.2 <- nls(y ~ rhs(x, intercept, power), data = ds, start = list(intercept = 0, + power = 2),trace=T)
rhs <- function(x, b0, b1) {
+ b0 + x^b1
+}
m.2 <- nls(y ~ rhs(x, intercept, power), data = ds, start = list(intercept=180, + power=2),trace = T)
m.2 <- nls(y ~ rhs(x, intercept, power), data = ds, start = list(intercept=180, + power=2))
m.2 <- nls(y ~ rhs(x, intercept, power), data = ds, start = list(intercept=0, + power =2),trace=T)
m.2 <- nls(y ~ rhs(x, intercept, power), data = ds, start = list(b0=0, + b1 =2),trace=T)
m.2 <- nls(y ~ rhs(x, intercept, power), data = ds, start = list(intercept=0, power = 2),trace=T)
rhs <- function(x, b0, b1) {
+ b0 + x^b1
+}
m.2 <- nls(y ~ rhs(x, intercept, power), data = ds, start = list(intercept=0, power = 2),trace=T)
source('~/.active-rstudio-document', echo=TRUE)
plot(ds$y ~ ds$x, main = "Fitted power model, with intercept",
sub = "Blue: fit; magenta: fit w/o intercept; green: known")
abline(h = 0, lty = 1, lwd = 0.5)
lines(s, s^3, lty = 2, col = "green")
lines(s, predict(m.2, list(x = s)), lty = 1, col = "blue")
lines(s, predict(m, list(x = s)), lty = 2, col = "magenta")
segments(x, y, x, fitted(m.2), lty = 2, col = "red")
(RSS.pi <- sum(residuals(m.2)^2))
1 - (RSS.pi/TSS)
(RSS.pi <- sum(residuals(m.2)^2))
(TSS <- sum((y - mean(y))^2))
1 - (RSS.pi/TSS)
summary(m.2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
data(humanpower1)
library(DAAG); attach(humanpower1)
install.packages("DAAG")
library(DAAG); attach(humanpower1)
library(DAAG); attach(humanpower1)
humanpower1
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("nlme")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
nmle
install.packages("nmle")
version
version
install.packages("nmle")
install.packages("nlme")
source('~/Documents/R/FHL_LMEtest.R', echo=TRUE)
install.packages("DAAG")
source('~/Documents/R/FHL_LMEtest.R', echo=TRUE)
lmList
install.packages("nlme")
hp.lmList <- lmList(o2~ wattsPerKg|id, data=humanpower1)
hp.lmList <- lmList(o2 ~ wattsPerKg|id, data=humanpower1)
lmList
library("DAAG", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("nlme", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
source('~/.active-rstudio-document', echo=TRUE)
hp.lmList <- lmList(o2 ~ wattsPerKg|id, data=humanpower1)
coefs <- data.frame(t(sapply(hp.lmList, coef)))
library(R.matlab)
library(agricolae)
# trial mean lap times
trialmn <- c(22.4346153846154,    39.1156250000000,  32.2573684210526,
25.2772727272727,	28.7019047619048,	26.5613043478261,	27.2952380952381,
42.2686666666667,	25.0495833333333,	35.0311111111111,	27.6572727272727,
26.2870833333333,	26.1421739130435,	38.8281250000000,	25.7356521739130,
35.3317647058824,	30.9170000000000,	29.2157142857143,	22.9676923076923,
40.8013333333333,	35.6823529411765,	25.6600000000000,	25.3225000000000,
27.0918181818182,	26.5308333333333,	26.0750000000000,	27.9263636363636,
27.5481818181818,	38.9487500000000,	35.3250000000000,	28.0836363636364)
# individual and tag condition are factors
Ind <- c(3,1,2,4,1,3,1,1,2,3,4,3,1,3,4,1,3,2,3,3,1,3,4,4,3,3,4,3,1,4,2)
Ind <- as.factor(Ind)
# O = no tag; 1 = tag; 5 = tag + 4; 10 = boat, no tag; 11 = boat, tag; 13 = boat, tag + 2
Condition <- c(0,5,1,0,0,1,1,5,0,5,1,0,1,5,0,0,1,1,0,5,1,1,11,10,11,10,13,13,5,5,0)
Condition <- as.factor(Condition)
# set up linear model
linear.model <- lm(trialmn ~ Ind + Condition)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
# plot
plot(trialmn ~ Ind*Condition)
Ind <- Ind(Cond < 10)
Ind <- c(3,1,2,4,1,3,1,1,2,3,4,3,1,3,4,1,3,2,3,3,1,3,4,4,3,3,4,3,1,4,2)
Ind <- as.factor(Ind)
Condition <- c(0,5,1,0,0,1,1,5,0,5,1,0,1,5,0,0,1,1,0,5,1,1,11,10,11,10,13,13,5,5,0)
Condition <- as.factor(Condition)
Ind <- Ind(Condition < 10)
Ind <- c(3,1,2,4,1,3,1,1,2,3,4,3,1,3,4,1,3,2,3,3,1,3,4,4,3,3,4,3,1,4,2)
Ind <- Ind(Condition < 10)
Ind <- c(3,1,2,4,1,3,1,1,2,3,4,3,1,3,4,1,3,2,3,3,1,3,4,4,3,3,4,3,1,4,2)
Condition <- c(0,5,1,0,0,1,1,5,0,5,1,0,1,5,0,0,1,1,0,5,1,1,11,10,11,10,13,13,5,5,0)
Ind <- Ind(Condition < 10)
Ind
Ind <- Ind[Condition < 10]
source('~/.active-rstudio-document', echo=TRUE)
library(R.matlab)
library(agricolae)
# trial mean lap times
trialmn <- c(22.4346153846154,    39.1156250000000,  32.2573684210526,
25.2772727272727,	28.7019047619048,	26.5613043478261,	27.2952380952381,
42.2686666666667,	25.0495833333333,	35.0311111111111,	27.6572727272727,
26.2870833333333,	26.1421739130435,	38.8281250000000,	25.7356521739130,
35.3317647058824,	30.9170000000000,	29.2157142857143,	22.9676923076923,
40.8013333333333,	35.6823529411765,	25.6600000000000,	25.3225000000000,
27.0918181818182,	26.5308333333333,	26.0750000000000,	27.9263636363636,
27.5481818181818,	38.9487500000000,	35.3250000000000,	28.0836363636364)
# individual and tag condition are factors
Ind <- c(3,1,2,4,1,3,1,1,2,3,4,3,1,3,4,1,3,2,3,3,1,3,4,4,3,3,4,3,1,4,2)
# O = no tag; 1 = tag; 5 = tag + 4; 10 = boat, no tag; 11 = boat, tag; 13 = boat, tag + 2
Condition <- c(0,5,1,0,0,1,1,5,0,5,1,0,1,5,0,0,1,1,0,5,1,1,11,10,11,10,13,13,5,5,0)
# Make non-boat trials only
Ind <- Ind[Condition < 10]
Condition <- Condition[Condition < 10]
Ind <- as.factor(Ind)
Condition <- as.factor(Condition)
# set up linear model
linear.model <- lm(trialmn ~ Ind + Condition)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
# plot
plot(trialmn ~ Ind*Condition)
library(R.matlab)
library(agricolae)
# trial mean lap times
trialmn <- c(22.4346153846154,    39.1156250000000,  32.2573684210526,
25.2772727272727,	28.7019047619048,	26.5613043478261,	27.2952380952381,
42.2686666666667,	25.0495833333333,	35.0311111111111,	27.6572727272727,
26.2870833333333,	26.1421739130435,	38.8281250000000,	25.7356521739130,
35.3317647058824,	30.9170000000000,	29.2157142857143,	22.9676923076923,
40.8013333333333,	35.6823529411765,	25.6600000000000,	25.3225000000000,
27.0918181818182,	26.5308333333333,	26.0750000000000,	27.9263636363636,
27.5481818181818,	38.9487500000000,	35.3250000000000,	28.0836363636364)
# individual and tag condition are factors
Ind <- c(3,1,2,4,1,3,1,1,2,3,4,3,1,3,4,1,3,2,3,3,1,3,4,4,3,3,4,3,1,4,2)
# O = no tag; 1 = tag; 5 = tag + 4; 10 = boat, no tag; 11 = boat, tag; 13 = boat, tag + 2
Condition <- c(0,5,1,0,0,1,1,5,0,5,1,0,1,5,0,0,1,1,0,5,1,1,11,10,11,10,13,13,5,5,0)
trialmn <- trialmn[Condition < 10]
Ind <- Ind[Condition < 10]
Condition <- Condition[Condition < 10]
Ind <- as.factor(Ind)
Condition <- as.factor(Condition)
# set up linear model
linear.model <- lm(trialmn ~ Ind + Condition)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
plot(trialmn ~ Ind*Condition)
aov
source('~/Documents/R/DQ_R/SwimSpeed.R', echo=TRUE)
library(R.matlab)
library(agricolae)
# trial mean lap times
trialmn <- c(22.4346153846154,    39.1156250000000,  32.2573684210526,
25.2772727272727,	28.7019047619048,	26.5613043478261,	27.2952380952381,
42.2686666666667,	25.0495833333333,	35.0311111111111,	27.6572727272727,
26.2870833333333,	26.1421739130435,	38.8281250000000,	25.7356521739130,
35.3317647058824,	30.9170000000000,	29.2157142857143,	22.9676923076923,
40.8013333333333,	35.6823529411765,	25.6600000000000,	25.3225000000000,
27.0918181818182,	26.5308333333333,	26.0750000000000,	27.9263636363636,
27.5481818181818,	38.9487500000000,	35.3250000000000,	28.0836363636364)
# individual and tag condition are factors
Ind <- c(3,1,2,4,1,3,1,1,2,3,4,3,1,3,4,1,3,2,3,3,1,3,4,4,3,3,4,3,1,4,2)
# O = no tag; 1 = tag; 5 = tag + 4; 10 = boat, no tag; 11 = boat, tag; 13 = boat, tag + 2
Condition <- c(0,5,1,0,0,1,1,5,0,5,1,0,1,5,0,0,1,1,0,5,1,1,11,10,11,10,13,13,5,5,0)
# Make non-boat trials only
trialmn <- trialmn[Condition < 10]
Ind <- Ind[Condition < 10]
Condition <- Condition[Condition < 10]
Ind <- as.factor(Ind)
Condition <- as.factor(Condition)
# set up linear model
linear.model <- lm(trialmn ~ Ind + Condition)
aov <- anova(linear.model)
TukeyHSD(aov(linear.model))
# plot
plot(trialmn ~ Ind*Condition)
Delt(trialmn[Condition==0])
mean(trialmn[Condition==0])
mean(trialmn[Condition==5])
mean(trialmn[Condition==5])-mean(trialmn[Condition==0])
(mean(trialmn[Condition==5])-mean(trialmn[Condition==0]))/mean(trialmn[Condition==c(0,5)])
(mean(trialmn[Condition==5])-mean(trialmn[Condition==0]))/mean(trialmn[Condition==c(0,5)])
(mean(trialmn[Condition==5])-mean(trialmn[Condition==0]))/mean(trialmn[Condition==0,5])
(mean(trialmn[Condition==5])-mean(trialmn[Condition==0]))/mean(trialmn[Condition==0])
(mean(trialmn[Condition==5])-mean(trialmn[Condition==1]))/mean(trialmn[Condition==1])
library(R.matlab)
library(agricolae)
## set directory and load data
setwd("~/Documents/MATLAB/Eg4057")
dat <- read.mat("FSRvars.mat")
library(R.matlab)
library(R.matlab)
library(agricolae)
## set directory and load data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars.mat")
setwd("~/Documents/R")
library(R.matlab)
library(agricolae)
## set directory and load data
setwd("~/Documents/MATLAB/Eg4057")
dat <- readMat("FSRvars.mat")
setwd("~/Documents/R")
wd
## load libraries
library(gplots)
library(RColorBrewer)
library(R.matlab)
## set directory
setwd("~/Documents/MATLAB/TOW/")
## load data
## each row is a different gear set
## columns are 0 m speed 1; 0 m speed 2; 0 m speed 3; 3 m speed 1; etc.
df <- readMat('CdRe_data.mat')
## set directory back
setwd("~/Documents/R/TOWR")
